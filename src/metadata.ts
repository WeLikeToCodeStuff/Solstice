/* eslint-disable */
export default async () => {
    const t = {
        ["./auth/users/entities/User.entity"]: await import("./auth/users/entities/User.entity"),
        ["./v1/server/entities/Server.entity"]: await import("./v1/server/entities/Server.entity")
    };
    return { "@nestjs/swagger": { "models": [[import("./auth/users/entities/User.entity"), { "User": { id: { required: true, type: () => String }, _id: { required: true, type: () => require("mongoose").Types.ObjectId }, username: { required: true, type: () => String }, email: { required: true, type: () => String }, password: { required: true, type: () => String }, createdTimestamp: { required: true, type: () => Number }, updatedTimestamp: { required: true, type: () => Number }, isAdministrator: { required: true, type: () => Boolean }, refreshTokens: { required: true, type: () => [String] } } }], [import("./auth/users/dto/createUser.dto"), { "createUserDto": { email: { required: true, type: () => String }, username: { required: true, type: () => String, minLength: 3, maxLength: 20 }, password: { required: true, type: () => String, minLength: 8, maxLength: 20 } } }], [import("./auth/dto/Auth.dto"), { "loginDto": { username: { required: true, type: () => String }, password: { required: true, type: () => String } }, "refreshTokenDto": { email: { required: true, type: () => String }, refreshToken: { required: true, type: () => String } }, "profileDto": { id: { required: false, type: () => String, minLength: 24, maxLength: 24 } } }], [import("./v1/server/entities/Server.entity"), { "Server": { id: { required: true, type: () => String }, _id: { required: true, type: () => require("mongoose").Types.ObjectId }, name: { required: true, type: () => String }, ip: { required: true, type: () => String }, lastHeartbeat: { required: true, type: () => Number }, isOnline: { required: true, type: () => Boolean }, createdTimestamp: { required: true, type: () => Number }, updatedTimestamp: { required: true, type: () => Number } } }], [import("./v1/server/dto/create-server.dto"), { "CreateServerDto": { ip: { required: true, type: () => String }, name: { required: true, type: () => String } } }], [import("./v1/server/dto/update-server.dto"), { "UpdateServerDto": {} }]], "controllers": [[import("./app.controller"), { "AppController": { "getAvailableEndpoints": { type: Object } } }], [import("./auth/users/users.controller"), { "UsersController": { "getUsers": { type: [t["./auth/users/entities/User.entity"].User] }, "createUser": { type: t["./auth/users/entities/User.entity"].User }, "deleteUser": { type: t["./auth/users/entities/User.entity"].User } } }], [import("./auth/auth.controller"), { "AuthController": { "signIn": {}, "refresh": {}, "getProfile": { type: t["./auth/users/entities/User.entity"].User } } }], [import("./health/health.controller"), { "HealthController": { "getHealth": {} } }], [import("./v1/server/server.controller"), { "ServerController": { "getServerStatistics": {}, "create": { type: Object }, "findAll": { type: [t["./v1/server/entities/Server.entity"].Server] }, "findOne": { type: t["./v1/server/entities/Server.entity"].Server }, "update": { type: String }, "remove": {} } }]] } };
};